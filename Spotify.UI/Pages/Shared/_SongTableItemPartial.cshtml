@model SongViewModel
@inject Microsoft.AspNetCore.Identity.UserManager<Spotify.Domain.Models.ApplicationUser> userManager
@inject Spotify.Domain.Infrastructure.IApplicationUserManager appUserManager

<tr>
    <td class="has-text-centered is-vcentered">
        @Model.Index
    </td>
    <td>
        <figure class="image is-48x48">
            <img src="/Albums/@Model.AlbumFileName" alt="@Model.Name" />
        </figure>
    </td>
    <td class="has-text-centered is-vcentered">
        <a asp-page="/AlbumPage" asp-route-id="@Model.AlbumId" id="song-@Model.Id-name">@Model.Name</a>
    </td>
    <td class="has-text-centered is-vcentered">
        <button class="button" onclick="playSong(@Model.Index)" id="song-play-@Model.Index"
        data-filename="@Model.FileName" data-id="@Model.Id">
            Play
        </button>
    </td>
    <td class="has-text-centered is-vcentered">
        <a asp-page="/Musician/Profile" asp-route-id="@Model.CreatorId" id="song-@Model.Id-creator">@Model.CreatorName</a>
    </td>
    @if (User.Identity.IsAuthenticated)
    {
        
        string buttonClass;
        string buttonText;
        string command;

        if (appUserManager.IsSongLiked(userManager.GetUserId(User), Model.Id))
        {
            buttonClass = "is-warning";
            buttonText = "Unlike";
            command = $"unLikeSong({Model.Id})";
        }
        else
        {
            buttonClass = "is-success";
            command = $"likeSong({Model.Id})";
            buttonText = "Like";
        }
        
        <td class="is-vcentered">
            <button class="button is-fullwidth @buttonClass" onclick="@command" id="song-@Model.Id">@buttonText</button>
        </td>
    }
    <td class="has-text-centered is-vcentered">
        @Model.Plays
    </td>
</tr>