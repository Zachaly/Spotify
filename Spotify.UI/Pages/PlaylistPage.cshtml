@page
@model Spotify.UI.Pages.PlaylistPageModel
@inject Microsoft.AspNetCore.Identity.UserManager<Spotify.Domain.Models.ApplicationUser> userManager
@{
}

<div class="container">
    <table class="table is-fullwidth">
        <caption>
            <div class="columns">
                <div class="column is-4">
                    <figure class="image is4-by3">
                        <img src="/Playlists/@Model.Info.FileName" alt="@Model.Info.Name"/>
                    </figure>
                </div>
                <div class="column has-text-left">
                    <h1 class="title">
                        @Model.Info.Name
                        @if (userManager.GetUserId(User) == @Model.Info.CreatorId)
                        {
                            <a class="button is-warning ml-2" asp-page="UpdatePlaylist" asp-route-id="@Model.Info.Id">
                                Update playlist
                            </a>
                            <a asp-controller="Playlist"
                            asp-action="RemovePlaylist"
                            asp-route-id="@Model.Info.Id"
                            class="button is-danger ml-2">
                                Remove playlist
                            </a>
                        }
                    </h1>
                    <h2 class="subtitle">
                        <a asp-page="/Accounts/UserProfile" asp-route-id="@Model.Info.CreatorId">
                            @Model.Info.CreatorName
                        </a>
                    </h2>
                    <h2 class="subtitle">@Model.Info.SongCount Songs</h2>
                </div>
            </div>
        </caption>
        @foreach(var song in Model.Songs)
        {
            <partial name="_SongTableItemPartial" model="song"/>
        }
    </table>

    @{
        var firstSong = Model.Songs.FirstOrDefault();
        var audioModel = new AudioViewModel
            {
                FileName = firstSong?.FileName,
                MusicianName = firstSong?.CreatorName,
                SongName = firstSong?.Name
            };
    }

    <partial name="_AudioPartial" model="@audioModel" />
</div>

@section Scripts{
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
    <script src="~/js/likeSong.js"></script>
    <script src="~/js/playSong.js"></script>
    <script src="~/js/addToPlaylist.js"></script>
}